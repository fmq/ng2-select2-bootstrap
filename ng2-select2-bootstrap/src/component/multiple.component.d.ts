import { ElementRef, NgZone, EventEmitter, TemplateRef } from '@angular/core';
import { ControlValueAccessor } from "@angular/forms";
import { Select } from './../common/select';
export declare class MultipleComponent extends Select implements ControlValueAccessor {
    elementRef: ElementRef;
    zone: NgZone;
    name: any;
    classe: any;
    placeholder: string;
    minimoCaracteres: number;
    templateResultado: TemplateRef<any>;
    templateSelecionado: TemplateRef<any>;
    templateSemResultado: TemplateRef<any>;
    indiceId: string;
    indiceNome: string;
    valores: any;
    change: EventEmitter<any>;
    onSelecionarItem: EventEmitter<any>;
    onBuscar: EventEmitter<any>;
    onApagar: EventEmitter<any>;
    onRemoverItem: EventEmitter<any>;
    onAbrir: EventEmitter<any>;
    onFechar: EventEmitter<any>;
    onLimpar: EventEmitter<any>;
    campoBusca: ElementRef;
    constructor(elementRef: ElementRef, zone: NgZone);
    abrir(): void;
    selecionar(item: any): void;
    getSomenteId(): any[];
    limpar(event: any): void;
    remove(item: any, event: any): void;
    buscar(): boolean;
    value: any;
    writeValue(value: any): void;
    updateValue(value: any): void;
    onChange(_: any): void;
    onTouched(): void;
    registerOnChange(fn: any): void;
    registerOnTouched(fn: any): void;
    _onChangeCallback(_: any): void;
    _onTouchedCallback(): void;
}
